// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//using Pharmacy_PatrascuAndreeaLarisa.Data;
using PharmacyModel.Data;

namespace Pharmacy_PatrascuAndreeaLarisa.Migrations
{
    [DbContext(typeof(PharmacyContext))]
    [Migration("20210109091850_ExtendedModel")]
    partial class ExtendedModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumeCategorie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategorieID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.FormaProdus", b =>
                {
                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<int>("TipID")
                        .HasColumnType("int");

                    b.HasKey("ProdusID", "TipID");

                    b.HasIndex("TipID");

                    b.ToTable("FormaProdus");
                });

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.Furnizor", b =>
                {
                    b.Property<int>("FurnizorID")
                        .HasColumnType("int");

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeFurnizor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FurnizorID");

                    b.ToTable("Furnizor");
                });

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.Produs", b =>
                {
                    b.Property<int>("ProdusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataExpirare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Doza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FurnizorID")
                        .HasColumnType("int");

                    b.Property<string>("NumeMedicament")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("ProdusID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("FurnizorID");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.Tip", b =>
                {
                    b.Property<int>("TipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipMedicament")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TipID");

                    b.ToTable("Tip");
                });

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.FormaProdus", b =>
                {
                    b.HasOne("Pharmacy_PatrascuAndreeaLarisa.Models.Produs", "Produs")
                        .WithMany("FormaProduse")
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pharmacy_PatrascuAndreeaLarisa.Models.Tip", "Tip")
                        .WithMany("FormaProduse")
                        .HasForeignKey("TipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pharmacy_PatrascuAndreeaLarisa.Models.Produs", b =>
                {
                    b.HasOne("Pharmacy_PatrascuAndreeaLarisa.Models.Categorie", "Categorie")
                        .WithMany("Produse")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pharmacy_PatrascuAndreeaLarisa.Models.Furnizor", "Furnizor")
                        .WithMany("Produse")
                        .HasForeignKey("FurnizorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
